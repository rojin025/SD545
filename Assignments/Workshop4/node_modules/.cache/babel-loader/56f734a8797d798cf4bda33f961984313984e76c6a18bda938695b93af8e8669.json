{"ast":null,"code":"var _jsxFileName = \"/Users/rojin025/Downloads/SD545/github/SD545/Assignments/Workshop4/src/components/Body.index.tsx\";\nimport \"./Card.index.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards({\n  onSearchResponse\n}) {\n  const {\n    isFirst,\n    isLoading,\n    isError,\n    users\n  } = onSearchResponse;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isFirst ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please Enter keyword to start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Whoops! Try later\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: user.html_url,\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar_url,\n            style: {\n              width: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: user.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","onSearchResponse","isFirst","isLoading","isError","users","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","href","html_url","target","src","avatar_url","style","width","login","id","_c","$RefreshReg$"],"sources":["/Users/rojin025/Downloads/SD545/github/SD545/Assignments/Workshop4/src/components/Body.index.tsx"],"sourcesContent":["import { SearchResponse } from \"../types/types\";\nimport \"./Card.index.css\";\n\ninterface Props {\n  onSearchResponse: SearchResponse;\n}\n\nexport default function Cards({ onSearchResponse }: Props) {\n  const { isFirst, isLoading, isError, users } = onSearchResponse;\n\n  return (\n    <>\n      {isFirst ? (\n        <h2>Please Enter keyword to start</h2>\n      ) : isLoading ? (\n        <h2>Please wait</h2>\n      ) : isError ? (\n        <h2>Whoops! Try later</h2>\n      ) : (\n        <div className=\"row\">\n          {users.map((user) => (\n            <div className=\"card\" key={user.id}>\n              <a href={user.html_url} target=\"_blank\">\n                <img src={user.avatar_url} style={{ width: \"100px\" }} />\n              </a>\n              <p className=\"card-text\">{user.login}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n}\n"],"mappings":";AACA,OAAO,kBAAkB;AAAC,SAAAA,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM1B,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAwB,CAAC,EAAE;EACzD,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGJ,gBAAgB;EAE/D,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACGJ,OAAO,gBACNL,OAAA;MAAAS,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACpCP,SAAS,gBACXN,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAClBN,OAAO,gBACTP,OAAA;MAAAS,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE1Bb,OAAA;MAAKc,SAAS,EAAC,KAAK;MAAAL,QAAA,EACjBD,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAKc,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACnBT,OAAA;UAAGiB,IAAI,EAAED,IAAI,CAACE,QAAS;UAACC,MAAM,EAAC,QAAQ;UAAAV,QAAA,eACrCT,OAAA;YAAKoB,GAAG,EAAEJ,IAAI,CAACK,UAAW;YAACC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAQ;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACJb,OAAA;UAAGc,SAAS,EAAC,WAAW;UAAAL,QAAA,EAAEO,IAAI,CAACQ;QAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJhBG,IAAI,CAACS,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK7B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN,gBACD,CAAC;AAEP;AAACa,EAAA,GAzBuBvB,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}